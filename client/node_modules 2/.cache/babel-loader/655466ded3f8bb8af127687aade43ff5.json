{"ast":null,"code":"var _jsxFileName = \"/Users/lindsaywhite/Desktop/Lambda/web-sprint-challenge-advanced-react/client/src/components/PlantList.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nexport default class PlantList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      plants: []\n    };\n    axios.get('http://localhost:3333/plants').then(res => {\n      console.log(res.data.plantsData);\n      res.data.plantsData = this.state.plants;\n    }).catch(err => console.log(err));\n  }\n\n  componentDidMount() {} //this.setState({this.state.plants})\n  // add state with a property called \"plants\" - initialize as an empty array\n  // when the component mounts:\n  //   - fetch data from the server endpoint - http://localhost:3333/plants\n  //   - set the returned plants array to this.state.plants\n\n  /*********  DON'T CHANGE ANYTHING IN THE RENDER FUNCTION *********/\n\n\n  render() {\n    var _this$state, _this$state$plants;\n\n    return /*#__PURE__*/React.createElement(\"main\", {\n      className: \"plant-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, (_this$state = this.state) === null || _this$state === void 0 ? void 0 : (_this$state$plants = _this$state.plants) === null || _this$state$plants === void 0 ? void 0 : _this$state$plants.map(plant => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plant-card\",\n      key: plant.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"plant-image\",\n      src: plant.img,\n      alt: plant.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plant-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"plant-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, plant.name), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"plant-scientific-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, plant.scientificName), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, plant.description), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plant-bottom-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, \"$\", plant.price), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, \"\\u2600\\uFE0F \", plant.light), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, \"\\uD83D\\uDCA6 \", plant.watering, \"x/month\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"plant-button\",\n      onClick: () => this.props.addToCart(plant),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 15\n      }\n    }, \"Add to cart\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/lindsaywhite/Desktop/Lambda/web-sprint-challenge-advanced-react/client/src/components/PlantList.js"],"names":["React","Component","axios","PlantList","constructor","state","plants","get","then","res","console","log","data","plantsData","catch","err","componentDidMount","render","map","plant","id","img","name","scientificName","description","price","light","watering","props","addToCart"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAC/CG,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAIAJ,IAAAA,KAAK,CAACK,GAAN,CAAU,8BAAV,EACCC,IADD,CACMC,GAAG,IAAE;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASC,UAArB;AACAJ,MAAAA,GAAG,CAACG,IAAJ,CAASC,UAAT,GAAsB,KAAKR,KAAL,CAAWC,MAAjC;AACD,KAJD,EAKCQ,KALD,CAKOC,GAAG,IAAGL,OAAO,CAACC,GAAR,CAAYI,GAAZ,CALb;AAMC;;AAEDC,EAAAA,iBAAiB,GAAE,CAElB,CAFgB,CACf;AAKJ;AAEA;AACA;AACA;;AAEA;;;AACAC,EAAAA,MAAM,GAAG;AAAA;;AACP,wBACE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACG,KAAKZ,KADR,sEACG,YAAYC,MADf,uDACG,mBAAoBY,GAApB,CAAyBC,KAAD,iBACvB;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,GAAG,EAAEA,KAAK,CAACC,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,GAAG,EAAED,KAAK,CAACE,GAAxC;AAA6C,MAAA,GAAG,EAAEF,KAAK,CAACG,IAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BH,KAAK,CAACG,IAAlC,CADF,eAEE;AAAG,MAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsCH,KAAK,CAACI,cAA5C,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIJ,KAAK,CAACK,WAAV,CAHF,eAIE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAKL,KAAK,CAACM,KAAX,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAON,KAAK,CAACO,KAAb,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAOP,KAAK,CAACQ,QAAb,YAHF,CAJF,eASE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,OAAO,EAAE,MAAM,KAAKC,KAAL,CAAWC,SAAX,CAAqBV,KAArB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBATF,CAFF,CADD,CADH,CADF;AAyBD;;AAtD8C","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class PlantList extends Component {\n  constructor(){\n    super();\n    this.state = {\n      plants: []\n      };\n\n    axios.get('http://localhost:3333/plants')\n    .then(res=>{\n      console.log(res.data.plantsData);\n      res.data.plantsData = this.state.plants;\n    })\n    .catch(err=> console.log(err));\n    };\n\n    componentDidMount(){\n      //this.setState({this.state.plants})\n    }\n\n  \n  \n  // add state with a property called \"plants\" - initialize as an empty array\n\n  // when the component mounts:\n  //   - fetch data from the server endpoint - http://localhost:3333/plants\n  //   - set the returned plants array to this.state.plants\n\n  /*********  DON'T CHANGE ANYTHING IN THE RENDER FUNCTION *********/\n  render() {\n    return (\n      <main className=\"plant-list\">\n        {this.state?.plants?.map((plant) => (\n          <div className=\"plant-card\" key={plant.id}>\n            <img className=\"plant-image\" src={plant.img} alt={plant.name} />\n            <div className=\"plant-details\">\n              <h2 className=\"plant-name\">{plant.name}</h2>\n              <p className=\"plant-scientific-name\">{plant.scientificName}</p>\n              <p>{plant.description}</p>\n              <div className=\"plant-bottom-row\">\n                <p>${plant.price}</p>\n                <p>‚òÄÔ∏è {plant.light}</p>\n                <p>üí¶ {plant.watering}x/month</p>\n              </div>\n              <button\n                className=\"plant-button\"\n                onClick={() => this.props.addToCart(plant)}\n              >\n                Add to cart\n              </button>\n            </div>\n          </div>\n        ))}\n      </main>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}